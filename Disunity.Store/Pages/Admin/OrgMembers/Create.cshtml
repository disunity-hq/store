@page
@using Disunity.Store.Entities
@model Disunity.Store.Pages.Admin.OrgMembers.CreateModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>OrgMember</h4>
<hr/>
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="OrgMember.UserId" class="control-label"></label>
                <select asp-for="OrgMember.UserId" class="form-control" asp-items="ViewBag.UserId"></select>
            </div>
            <div class="form-group">
                <label asp-for="OrgMember.OrgId" class="control-label"></label>
                <select asp-for="OrgMember.OrgId" class="form-control" asp-items="ViewBag.OrgId"></select>
            </div>
            <div class="form-group">
                <label asp-for="OrgMember.Role" class="control-label"></label>
                <select asp-for="OrgMember.Role" asp-items="Html.GetEnumSelectList<OrgMemberRole>()" class="form-control">
                    <option selected="selected" value="">Please select</option>
                </select>
                <span asp-validation-for="OrgMember.Role" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary"/>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
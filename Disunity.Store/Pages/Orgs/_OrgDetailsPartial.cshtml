@using Disunity.Store.Entities
@using Disunity.Store.Policies
@using Microsoft.AspNetCore.Authorization
@model Disunity.Store.Entities.Org
@inject IAuthorizationService AuthorizationService

@{
    var canEdit = (await AuthorizationService.AuthorizeAsync(User, Model, Operation.Update)).Succeeded;
    var canManageUsers = (await AuthorizationService.AuthorizeAsync(User, Model, Operation.ManageMembers)).Succeeded;
    var canManageRoles = (await AuthorizationService.AuthorizeAsync(User, Model, Operation.ManageMemberRoles)).Succeeded;
    var modalData = new {placeholder = "Enter Org display name"};
    var scriptParams = new object[] {Model.Slug, canManageUsers, canManageRoles};
}

<h1>
    @if (canEdit) {
        <ejs-inplaceeditor id="element" type="Text"
                           mode="Inline"
                           name="DisplayName"
                           value="@Model.DisplayName"
                           model="@modalData"
                           url="/api/v1/orgs/@Model.Slug"
                           primaryKey="@Model.Slug"
                           adaptor="UrlAdaptor"
                           data-underline="false">
        </ejs-inplaceeditor>
    } else {
        @Model.DisplayName
    }
</h1>


<div id="usersTable"></div>

<page-script path="users/details" params="@scriptParams"/>
version: '3.7'

services:

  frontend:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: frontend
    volumes:
      - ./Frontend/ts:/Source/ts
      - ./Frontend/css:/Source/css
      - static-data:/Build

  web:
    build:
      context: .
      dockerfile: ./Dockerfile
    restart: always
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: ${DATABASE_URL}
      AdminUser__Email: ${ADMINUSER_EMAIL}
      AdminUser__Password: ${ADMINUSER_PASSWORD}
      SyncFusion__License: ${SYNCFUSION_LICENSE}
      Auth__Github__ClientId: ${AUTH_GITHUB_CLIENT_ID}
      Auth__Github__ClientSecret: ${AUTH_GITHUB_CLIENT_SECRET}
      Auth__Discord__ClientId: ${AUTH_DISCORD_CLIENT_ID}
      Auth__Discord__ClientSecret: ${AUTH_DISCORD_CLIENT_SECRET}
    ports:
      - 127.0.0.1:8000:80
    depends_on:
      - db
      - cache
    volumes:
      - static-data:/Frontend/dist
      - ./Disunity.Store/Pages:/app/Pages
      - ./Disunity.Store/Areas:/app/Areas

  db:
    image: postgres:10.4-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db-data:/var/lib/postgresql/data

  cache:
    image: redis:5.0.4-alpine3.9
    restart: always
    command: --maxmemory 200mb --maxmemory-policy allkeys-lru

  dotnet:
    image: mcr.microsoft.com/dotnet/core/sdk:2.2
    entrypoint: dotnet
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: ${DATABASE_URL}
    volumes:
      - ./:/app



volumes:
  db-data:
  static-data:
  built-static:
